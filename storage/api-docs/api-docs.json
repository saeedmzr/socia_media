{
    "openapi": "3.0.0",
    "info": {
        "title": "Tasks Management API",
        "description": "This is an example API for tasks management",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api/",
            "description": "Base path for all API endpoints"
        }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User registration",
                "description": "Registers a new user with the provided details.",
                "operationId": "08136088c4862c313b35d6518bab8d3a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Logs in a user with the provided credentials.",
                "operationId": "99d66635c4992aeaa6aa44ff653d0563",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/auth/get": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get user information",
                "description": "Retrieves information of the authenticated user.",
                "operationId": "84d74e5a4a54ec53ea2ea7f7cc7da12c",
                "responses": {
                    "200": {
                        "description": "User information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Logs out the authenticated user.",
                "operationId": "6abf3b64a4bc7838d56346f05a5153af",
                "responses": {
                    "200": {
                        "description": "User logged out successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/posts/comments/{commentId}": {
            "get": {
                "tags": [
                    "Comment Management"
                ],
                "summary": "Get a comment by ID",
                "description": "Retrieves a single comment identified by its ID.",
                "operationId": "5400cd429ea975534ac6020acc55591d",
                "parameters": [
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "ID of the comment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Comment Management"
                ],
                "summary": "Update a comment",
                "description": "Updates an existing comment with the provided details.",
                "operationId": "40354b36b56369b2c24dd40834298eab",
                "parameters": [
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "ID of the comment to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCommentSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CommentSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden: Could not update this comment"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Comment Management"
                ],
                "summary": "Delete a comment",
                "description": "Deletes a comment with the provided ID.",
                "operationId": "abbebb3c64a845d1d02360d44dc9acf5",
                "parameters": [
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "ID of the comment to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Comment deleted successfully"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                }
            }
        },
        "/posts/comments": {
            "put": {
                "tags": [
                    "Comment Management"
                ],
                "summary": "Create a comment",
                "description": "Create a comment with the provided details.",
                "operationId": "4b787db7a1aea954d0dcca1ff8a9d317",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCommentSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CommentSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden: Could not update this comment"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "tags": [
                    "Post Management"
                ],
                "summary": "Get a paginated list of posts",
                "description": "Retrieves a list of posts owned by the authenticated user. Use query parameters for filtering and pagination.",
                "operationId": "cce7863441436fd49dc474491f658292",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Optional filters for searching posts (refer to your specific implementation)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "description": "Filter posts by their status",
                                "type": "string",
                                "enum": [
                                    "completed",
                                    "create",
                                    "system_completed"
                                ]
                            }
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of items per page (default 10)",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostSchema"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctumAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Post Management"
                ],
                "summary": "Create a new post",
                "description": "Creates a new post with the provided details.",
                "operationId": "21a6ac5f9280a3cf958c3d066b5600ee",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePostSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PostSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/posts/{postId}": {
            "get": {
                "tags": [
                    "Post Management"
                ],
                "summary": "Get a post by ID",
                "description": "Retrieves a single post identified by its ID.",
                "operationId": "04e28d03abbc1c8cbe8d01b92b4011b2",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "ID of the post",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Post Management"
                ],
                "summary": "Update a post",
                "description": "Updates an existing post with the provided details.",
                "operationId": "26847e8ad19915583bd05e580ec8c6b0",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "ID of the post to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePostSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PostSchema"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden: Could not update this post"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Post Management"
                ],
                "summary": "Delete a post",
                "description": "Deletes a post with the provided ID.",
                "operationId": "d477c7dc08966e54b1a008f3cf9c5439",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "ID of the post to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Post deleted successfully"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CreateCommentSchema": {
                "properties": {
                    "body": {
                        "description": "comment's body",
                        "type": "string"
                    },
                    "post_id": {
                        "description": "comment's post id",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UpdateCommentSchema": {
                "properties": {
                    "body": {
                        "description": "comment's body",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreatePostSchema": {
                "properties": {
                    "content": {
                        "description": "post's content",
                        "type": "string"
                    },
                    "visibility": {
                        "description": "post's visibility",
                        "type": "string"
                    },
                    "media": {
                        "description": "post's media",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdatePostSchema": {
                "properties": {
                    "content": {
                        "description": "post's content",
                        "type": "string"
                    },
                    "visibility": {
                        "description": "post's visibility",
                        "type": "string"
                    },
                    "media": {
                        "description": "post's media",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LoginSchema": {
                "properties": {
                    "email": {
                        "description": "user's email",
                        "type": "string"
                    },
                    "password": {
                        "description": "user's password",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RegisterSchema": {
                "properties": {
                    "name": {
                        "description": "user's name",
                        "type": "string"
                    },
                    "email": {
                        "description": "user's email that should be unique",
                        "type": "string"
                    },
                    "password": {
                        "description": "user's password",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CommentSchema": {
                "properties": {
                    "id": {
                        "description": "Comment ID",
                        "type": "integer"
                    },
                    "body": {
                        "description": "Comment body",
                        "type": "string"
                    },
                    "created at": {
                        "description": "Comment created_at datetime",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Comment updated_at datetime",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "MediaSchema": {
                "properties": {
                    "id": {
                        "description": "Media ID",
                        "type": "integer"
                    },
                    "file_path": {
                        "description": "Media file_path",
                        "type": "string"
                    },
                    "media_type": {
                        "description": "Media media_type",
                        "type": "string"
                    },
                    "created at": {
                        "description": "Media created_at datetime",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Media updated_at datetime",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PostSchema": {
                "properties": {
                    "id": {
                        "description": "Post ID",
                        "type": "integer"
                    },
                    "content": {
                        "description": "Post content",
                        "type": "string"
                    },
                    "visibility": {
                        "description": "Post visibility",
                        "type": "string"
                    },
                    "created at": {
                        "description": "Post created_at datetime",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Post updated_at datetime",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "UserSchema": {
                "properties": {
                    "name": {
                        "description": "User's name",
                        "type": "string"
                    },
                    "email": {
                        "description": "User's email",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctumAuth": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication"
        },
        {
            "name": "Comment Management"
        },
        {
            "name": "Post Management"
        }
    ]
}